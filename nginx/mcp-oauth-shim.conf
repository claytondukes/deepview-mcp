server {
    listen 8080;
    server_name _;

    # 1) OIDC discovery (ChatGPT fetches this on the MCP domain)
    location = /.well-known/openid-configuration {
        proxy_pass https://auth.logzilla.net/.well-known/openid-configuration;
        proxy_set_header Host auth.logzilla.net;
    }

    # 2) OAuth 2.0 Authorization Server metadata (some clients use this path)
    location = /.well-known/oauth-authorization-server {
        proxy_pass https://auth.logzilla.net/.well-known/openid-configuration;
        proxy_set_header Host auth.logzilla.net;
    }

    # 3) Authorization endpoint (browser step; just proxy/redirect to Auth0)
    location = /authorize {
        proxy_pass https://auth.logzilla.net/authorize$is_args$args;
        proxy_set_header Host auth.logzilla.net;
    }

    # 4) Token endpoint (backend token exchange)
    location = /oauth/token {
        proxy_pass https://auth.logzilla.net/oauth/token;
        proxy_set_header Host auth.logzilla.net;
    }

    # 5) Health passthrough to the app (optional but handy)
    location = /health {
        proxy_pass http://deepview-mcp:8019/health;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 6) MCP JSON-RPC endpoint (preserve Authorization header)
    location = /deepview-mcp/mcp {
        proxy_pass http://deepview-mcp:8019/deepview-mcp/mcp;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
    }
}
